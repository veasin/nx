<?php
/**
 * Created by PhpStorm.
 * User: Vea
 * Date: 2019/03/26 026
 * Time: 09:33
 */

use PHPUnit\Framework\TestCase;

class sqlbugTest extends TestCase{
	use \nx\parts\db\pdo;
	protected function setUp(){
		parent::setUp(); // TODO: Change the autogenerated stub
	}
	/**
	 * @param        $name
	 * @param string $primary
	 * @param null   $db
	 * @return \nx\helpers\db\sql
	 */
	public function table($name, $primary='id', $db=null){
		return new \nx\helpers\db\sql($name, $primary, $db);
	}
	public function testBug1(){

		$db =new \nx\helpers\db\pdo();
		$user =$db->from('user');
		$info =$db->from('info i');
		$user->join($info, ['id'=>$user['id']]);
		$user->where($info['id']->equal($user(1)));
		$user->select();

		$this->assertEquals('SELECT `user`.* FROM `user` LEFT JOIN `info` `i` ON (`i`.`id` = `user`.`id`) WHERE `i`.`id` = ?', (string)$user);
		var_dump($user->params);

	}
	public function testBug2(){

		$db =new \nx\helpers\db\pdo();
		$user =$db->from('user');
		$info =$db->from('info a');

		$user
			->join($info->select(), ['user_id'=>'id'])
			->where([
				$user['id']->equal(1),
				$info['id']->operate($user(2),'>')
			])
			->select(null);

		$this->assertEquals('SELECT `a`.* FROM `user` LEFT JOIN `info` `a` ON (`a`.`user_id` = `user`.`id`) WHERE `user`.`id` = ? AND `a`.`id` > ?', (string)$user);
		$this->assertEquals([1, 2], $user->params);
		//var_dump($user->params);

	}
	public function testBug3(){
		$db =new \nx\helpers\db\pdo();
		$content =$db->from('article');
		$content->select(['id','content_id','url','title','desc','image']);

		$user_course = $db->from('user_course');
		$user_count = $user_course::COUNT($user_course['id'])->as('count');
		$content->join($user_course->select($user_count), ['content_id'=>'content_id'])
			->group('content_id')->sort($user_count,'desc');

		$this->assertEquals('SELECT `article`.`id`, `article`.`content_id`, `article`.`url`, `article`.`title`, `article`.`desc`, `article`.`image`, COUNT(`user_course`.`id`) `count` FROM `article` LEFT JOIN `user_course` ON (`user_course`.`content_id` = `article`.`content_id`) GROUP BY `article`.`content_id` ORDER BY `count` DESC', (string)$content);
	}
}